#██████╗ ██╗███╗   ██╗ █████╗ ██████╗ ██╗   ██╗    ███████╗███████╗███╗   ██╗███████╗ ██████╗ ██████╗
#██╔══██╗██║████╗  ██║██╔══██╗██╔══██╗╚██╗ ██╔╝    ██╔════╝██╔════╝████╗  ██║██╔════╝██╔═══██╗██╔══██╗
#██████╔╝██║██╔██╗ ██║███████║██████╔╝ ╚████╔╝     ███████╗█████╗  ██╔██╗ ██║███████╗██║   ██║██████╔╝
#██╔══██╗██║██║╚██╗██║██╔══██║██╔══██╗  ╚██╔╝      ╚════██║██╔══╝  ██║╚██╗██║╚════██║██║   ██║██╔══██╗
#██████╔╝██║██║ ╚████║██║  ██║██║  ██║   ██║       ███████║███████╗██║ ╚████║███████║╚██████╔╝██║  ██║
#╚═════╝ ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝       ╚══════╝╚══════╝╚═╝  ╚═══╝╚══════╝ ╚═════╝ ╚═╝  ╚═╝
#
binary_sensor:
  - platform: workday
    name: Werktag
    country: DE
    province: BY
    excludes: [sat, sun, holiday]
    add_holidays:
      - 2019-12-24
  - platform: workday
    name: Werktag Morgen
    country: DE
    province: BY
    excludes: [sat, sun, holiday]
    add_holidays:
      - 2019-12-24
    days_offset: 1
  - platform: workday
    country: DE
    province: BY
    name: Feiertag Morgen
    workdays: [holiday]
    days_offset: 1
    excludes: []
  - platform: workday
    country: DE
    province: BY
    name: Feiertag in einer Woche
    workdays: [holiday]
    days_offset: 7
    excludes: []
  - platform: bayesian
    device_class: presence
    prior: 0.5
    name: Presence Martin
    probability_threshold: 0.9
    observations:
      - entity_id: "device_tracker.google_pixel"
        prob_given_true: 0.9
        prob_given_false: 0.1
        platform: "state"
        to_state: "home"
  - platform: template
    sensors:
      macbook_battery_level_low:
        value_template: "{{ (states.sensor.macbook_air_battery_level | float) < 25 }}"
        friendly_name: "MacBook Akku kritisch"
      nexus_battery_level_low:
        value_template: "{{ (states.sensor.google_nexus_battery_level | float) < 25 }}"
        friendly_name: "Nexus Akku kritisch"
      pixel_battery_level_low:
        value_template: "{{ (states.sensor.google_pixel_battery_level | float) < 25 }}"
        friendly_name: "Pixel Akku kritisch"
      climate_thermostat_bad_battery_level_low:
        value_template: "{{ (states.sensor.climate_thermostat_bad_battery_level | float) < 25 }}"
        friendly_name: "iTRV Bad Akku kritisch"
      climate_thermostat_wohnzimmer_battery_level_low:
        value_template: "{{ (states.sensor.climate_thermostat_wohnzimmer_battery_level | float) < 25 }}"
        friendly_name: "iTRV Wohnzimmer Akku kritisch"
      climate_thermostat_kueche_battery_level_low:
        value_template: "{{ (states.sensor.climate_thermostat_kueche_battery_level | float) < 25 }}"
        friendly_name: "iTRV Kueche Akku kritisch"
      climate_raumthermostat_wohnzimmer_battery_level_low:
        value_template: "{{ (states.sensor.climate_raumthermostat_wohnzimmer_battery_level | float) < 80 }}"
        friendly_name: "iTRV Raumthermostat Akku kritisch"
      dark_outside:
        value_template: "{{ is_state('sun.sun', 'below_horizon') }}"
        friendly_name: "Dark Outside"
        device_class: light
      dark_inside:
        value_template: '{{ (states.sensor.nodemcu_2_tv_lichtsensor | float) < 200 }}' # lets consider 200 lux so dark that the cam needs a light
        friendly_name: "Dark Inside"
        device_class: light
      window_wohnzimmer:
        device_class: window
        friendly_name: Fenster Wohnzimmer
        value_template: '{{state_attr("climate.wiser_wohnzimmer","window_state") == "Open"}}'
        icon_template: >-
          {% if is_state("binary_sensor.window_wohnzimmer", "on") %}
            mdi:window-open-variant
          {% else %}
            mdi:window-closed-variant
          {% endif %}
      window_bad:
        friendly_name: Fenster Bad
        device_class: window
        value_template: '{{state_attr("climate.wiser_bad","window_state") == "Open"}}'
        icon_template: >-
          {% if is_state("binary_sensor.window_bad", "on") %}
            mdi:window-open-variant
          {% else %}
            mdi:window-closed-variant
          {% endif %}
      window_flur:
        device_class: window
        friendly_name: Fenster Flur
        value_template: '{{state_attr("climate.wiser_flur","window_state") == "Open"}}'
        icon_template: >-
          {% if is_state("binary_sensor.window_flur", "on") %}
            mdi:window-open-variant
          {% else %}
            mdi:window-closed-variant
          {% endif %}
      heating_wohnzimmer:
        device_class: heat
        friendly_name: Heizung Wohnzimmer
        value_template: '{{state_attr("climate.wiser_wohnzimmer","control_output_state") == "On"}}'
      #        icon_template: >-
      #          {% if is_state("binary_sensor.wiser_wohnzimmer", "on") %}
      #            mdi:radiator
      #          {% else %}
      #            mdi:radiator-off
      #          {% endif %}
      heating_bad:
        device_class: heat
        friendly_name: Heizung Bad
        value_template: '{{state_attr("climate.wiser_bad","control_output_state") == "On"}}'
      #        icon_template: >-
      #          {% if is_state("binary_sensor.wiser_bad", "on") %}
      #            mdi:radiator
      #          {% else %}
      #            mdi:radiator-off
      #          {% endif %}
      heating_flur:
        device_class: heat
        friendly_name: Heizung Flur
        value_template: '{{state_attr("climate.wiser_flur","control_output_state") == "On"}}'
#  - platform: ffmpeg_noise
#    name: Noise Sensor 1 (Wohnzimmer)
#    input: -f alsa -ac 1 -i plughw:1,0 -vn -filter:a silencedetect=n=-10dB:d=1 -f null -
##    input: -f pulse -ac 1 -i default -vn -filter:a silencedetect=n=-10dB:d=1 -f null -
#    #   input: !secret nest_stream
#    extra_arguments: -filter:a highpass=f=300,lowpass=f=2500,volume=volume=2 -codec:a libmp3lame -ar 16000
#    initial_state: true
#    duration: 2
#    reset: 60
#    peak: -32
#  - platform: ffmpeg_motion
#    input: !secret nest_stream # pragma: allowlist secret
#    name: Motion Sensor
#    reset: 120
#    changes: 10
#    initial_state: true
  #   extra_arguments: -q:v 2
  - platform: trend
    sensors:
      outside_temperature_rising:
        entity_id: sensor.outside_temperature
        sample_duration: 7200
        min_gradient: 0.0008
        device_class: heat
      outside_temperature_falling:
        entity_id: sensor.outside_temperature
        sample_duration: 7200
        min_gradient: -0.0008
        device_class: cold
      inside_temperature_rising:
        entity_id: sensor.climate_wohnung_temp
        sample_duration: 7200
        min_gradient: 0.0008
        device_class: heat
      inside_temperature_falling:
        entity_id: sensor.climate_wohnung_temp
        sample_duration: 7200
        min_gradient: -0.0008
        device_class: cold
#  - platform: threshold
#    device_class: door
#    name: Wohnzimmertür
#    entity_id: sensor.nodemcu_3_accel_x
#    lower: "0.4"
  - platform: uptimerobot
    api_key: !secret uptime_robot_apikey