- alias: Home Mode Vacation
  id: "1"
  trigger:
    - entity_id: binary_sensor.presence_martin
      for: "12:00:00"
      platform: state
      from: "on"
      to: "off"
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.home_mode
        option: Vacation
- alias: Home Mode Away
  id: "2"
  trigger:
    - entity_id: binary_sensor.presence_martin
      platform: state
      from: "on"
      to: "off"
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.home_mode
        option: Away
- alias: Home Mode Home
  id: "3"
  trigger:
    - entity_id: binary_sensor.presence_martin
      platform: state
      from: "off"
      to: "on"
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.home_mode
        option: Home
- alias: Set Home Mode Home
  id: "4"
  trigger:
    platform: state
    entity_id: input_select.home_mode
    to: Home
  action:
    - service: notify.telegram
      data:
        message: Home Mode turned ON
    - service: switch.turn_off
      entity_id: switch.heating_away_mode
    - service: switch.turn_on
      entity_id: switch.schalter_flur_whz_relay
    - service: media_player.volume_set
      data:
        entity_id: media_player.google_nest_hub
        volume_level: 0.01
    - service: media_player.turn_on
      data:
        entity_id: media_player.google_nest_hub
    - delay: 00:00:20
    - service: media_player.volume_set
      data:
        entity_id: media_player.google_nest_hub
        volume_level: 0.37
    - delay: 00:00:05
    - service: tts.google_cloud_say
      entity_id: media_player.google_nest_hub
      data_template:
        message:
          Hallo Martin heute ist {{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][now().weekday()]
          }}. Die Zimmertemperatur betraegt {{states('sensor.climate_wohnung_temp')}}
          Grad Celsius. Das Wetter ist {{states('sensor.dark_sky_summary')}} bei {{states('sensor.dark_sky_temperature')}}
          Grad Celsius. Du bist heute bereits {{states('sensor.google_fit_martin_move_time')}}
          Minuten und {{states('sensor.google_fit_martin_steps')}} Schritte gelaufen,
          mach weiter so! Ach Ja! in deiner Region sind es mittlerweile {{states('sensor.germany_coronavirus_confirmed')}}
          Corona infizierte und davon konnten {{states('sensor.germany_coronavirus_recovered')}}
          geheilt werden, halte dich trotzdem fern! Der naechste Feiertag ist {{(states.calendar.feiertage.attributes.message)}}
          am  {{ as_timestamp(strptime(state_attr('calendar.feiertage', 'start_time'),
          '%Y-%m-%d %H:%M:%S')) | timestamp_custom('%Y-%m-%d') }}
- alias: Set Home Mode Away
  id: "5"
  trigger:
    platform: state
    entity_id: input_select.home_mode
    to: Away
  action:
    - service: switch.turn_on
      entity_id: switch.heating_away_mode
    - service: switch.turn_on
      entity_id: switch.restreamer
    - service: light.turn_off
      entity_id:
        - light.all_lights
    - service: media_player.turn_off
      entity_id:
        - media_player.android_tv
        - media_player.shield
    - service: notify.telegram
      data:
        message: Away Mode turned ON
    - delay: 00:02:00
    - service: ffmpeg.restart
      data:
        entity_id:
          - camera.nest_cam
    - delay: 00:02:00
    - service: ffmpeg.restart
      data:
        entity_id:
          - binary_sensor.motion_sensor
- alias: Set Home Mode Vacation
  id: "6"
  trigger:
    platform: state
    entity_id: input_select.home_mode
    to: Vacation
  action:
    - service: switch.turn_on
      entity_id: switch.heating_away_mode
    - service: switch.turn_on
      entity_id: switch.restreamer
    - service: light.turn_off
      entity_id:
        - light.all_lights
    - service: media_player.turn_off
      entity_id:
        - media_player.android_tv
        - media_player.shield
    - service: notify.telegram
      data:
        message: Home Mode Vacation ON
- alias: Notification Update
  id: "7"
  trigger:
    platform: state
    entity_id: binary_sensor.updater
    to: "on"
  action:
    - data:
        message: Update available
        title: Update available
      service: notify.telegram
- alias: Notification UniFi Alert
  id: "8"
  trigger:
    - platform: state
      entity_id: sensor.unifi_gateway_alerts
  condition:
    - condition: template
      value_template: "{{ (states.sensor.unifi_gateway_alerts | float) > 0 }}"
  action:
    - service: notify.telegram
      data_template:
        title: UniFi Alert
        message: >
          {{states('sensor.unifi_gateway_alerts')}}
          {{states.sensor.unifi_gateway_alerts.attributes}}
    - service: rest_command.assistant_broadcast
      data_template:
        command: Hey Martin, Es ist ein Fehler auf deinem Router, schau besser nach.
- alias: Notification UniFi Guest Logon
  id: "9"
  trigger:
    - platform: state
      entity_id: sensor.unifi_wlan_guest
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{trigger.from_state.state > trigger.to_state.state}}"
      - condition: template
        value_template: "{{(trigger.to_state.state | default(0) | float) >= 1 }}"
  action:
    - service: notify.telegram
      data_template:
        title: Ein Gast hat sich in dein Netzwerk eingeloggt.
        message: >
          Zur Zeit ist/sind {{states('sensor.unifi_wlan_guest')}} Gaste/GÃ¤ste in deinem Netzwerk.
    - service: rest_command.assistant_broadcast
      data_template:
        command: Hey Martin, Ein Gast hat sich in dein Netzwerk eingeloggt.
- alias: Notification h3 Podcast
  id: "10"
  trigger:
    - platform: state
      entity_id: sensor.h3_podcast
  condition:
    - condition: template
      value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notification_h3_podcast.attributes.last_triggered) | int > 900 }}"
    - condition: template
      value_template: "{{ states.automation.notification_h3_podcast.attributes.last_triggered != none }}"
  action:
    - service: notify.telegram
      data_template:
        title: New h3 Podcast
        message: >
          {{states('sensor.h3_podcast')}}
           {{state_attr('sensor.h3_podcast', 'url')}}
        data:
          inline_keyboard:
            - "Play Video on TV:/yt_h3"
- alias: Notification Nexpo Video
  id: "11"
  trigger:
    - platform: state
      entity_id: sensor.nexpo
  condition:
    - condition: template
      value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notification_nexpo_video.attributes.last_triggered) | int > 900 }}"
    - condition: template
      value_template: "{{ states.automation.notification_nexpo_video.attributes.last_triggered != none }}"
  action:
    - service: notify.telegram
      data_template:
        title: New Nexpo Video
        message: >
          {{states('sensor.nexpo')}}
           {{state_attr('sensor.nexpo', 'url')}}
        data:
          inline_keyboard:
            - "Play Video on TV:/yt_nexpo"
    - service: rest_command.assistant_broadcast
      data_template:
        command: Hey Martin, Nexpo hat ein neues Video auf YouTube hochgeladen.
- alias: Notification ScareTheater Video
  id: "12"
  trigger:
    - platform: state
      entity_id: sensor.scaretheater
  condition:
    - condition: template
      value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notification_scaretheater_video.attributes.last_triggered) | int > 900 }}"
    - condition: template
      value_template: "{{ states.automation.notification_scaretheater_video.attributes.last_triggered != none }}"
  action:
    - service: notify.telegram
      data_template:
        title: New ScareTheater Video
        message: >
          {{states('sensor.scaretheater')}}
           {{state_attr('sensor.scaretheater', 'url')}}
        data:
          inline_keyboard:
            - "Play Video on TV:/yt_scaretheater"
- alias: Notification ReignBot Video
  id: "13"
  trigger:
    - platform: state
      entity_id: sensor.reignbot
  condition:
    - condition: template
      value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notification_reignbot_video.attributes.last_triggered) | int > 900 }}"
    - condition: template
      value_template: "{{ states.automation.notification_reignbot_video.attributes.last_triggered != none }}"
  action:
    - service: notify.telegram
      data_template:
        title: New ReignBot Video
        message: >
          {{states('sensor.reignbot')}}
           {{state_attr('sensor.reignbot', 'url')}}
        data:
          inline_keyboard:
            - "Play Video on TV:/yt_reignbot"
- alias: Notification Frenck Video
  id: "14"
  trigger:
    - platform: state
      entity_id: sensor.franck_nijhof
  condition:
    - condition: template
      value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notification_frenck_video.attributes.last_triggered) | int > 900 }}"
    - condition: template
      value_template: "{{ states.automation.notification_frenck_video.attributes.last_triggered != none }}"
  action:
    - service: notify.telegram
      data_template:
        title: New Frenck Video
        message: >
          {{states('sensor.franck_nijhof')}}
           {{state_attr('sensor.franck_nijhof', 'url')}}
        data:
          inline_keyboard:
            - "Play Video on TV:/yt_frenck"
- alias: Notification SomeOrdinaryGamers Video
  id: "15"
  trigger:
    - platform: state
      entity_id: sensor.someordinarygamers
  condition:
    - condition: template
      value_template: "{{ as_timestamp(now()) - as_timestamp(states.automation.notification_someordinarygamers_video.attributes.last_triggered) | int > 900 }}"
    - condition: template
      value_template: "{{ states.automation.notification_someordinarygamers_video.attributes.last_triggered != none }}"
  action:
    - service: notify.telegram
      data_template:
        title: New SomeOrdinaryGamers Video
        message: >
          {{states('sensor.someordinarygamers')}}
           {{state_attr('sensor.someordinarygamers', 'url')}}
        data:
          inline_keyboard:
            - "Play Video on TV:/yt_sog"
- alias: Update commute sensors
  id: "16"
  trigger:
    - platform: time_pattern
      minutes: /60
  condition:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: "on"
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.morning_commute_trains
    - service: homeassistant.update_entity
      entity_id: sensor.morning_commute_bike
    - service: homeassistant.update_entity
      entity_id: sensor.travel_parents_trains
    - service: homeassistant.update_entity
      entity_id: sensor.travel_parents_bike
- alias: Update Xur Sensor
  id: "17"
  trigger:
    - platform: time_pattern
      minutes: /120
  condition:
    condition: time
    after: "19:00:00"
    weekday:
      - fri
      - sat
      - sun
      - mon
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.wtfisxur
- alias: Notification Coinbase Wallet
  id: "18"
  trigger:
    - platform: state
      entity_id: sensor.coinbase_eur_wallet
  action:
    - service: notify.telegram
      data_template:
        title: â¿ Coinbase Wallet Value changed
        message:
          "Event triggered: {{ trigger.entity_id }} changed from {{ trigger.from_state.state
          }} to {{ trigger.to_state.state }}"
- alias: Notification Xur
  id: "19"
  trigger:
    - platform: state
      entity_id: sensor.wtfisxur
  action:
    - service: notify.telegram
      data_template:
        title: Xur changed location
        message: "{{states('sensor.wtfisxur')}}"
- alias: Notification something new in HACS
  id: "20"
  trigger:
    - platform: event
      event_type: hacs/repository
      event_data:
        action: registration
  condition:
    - condition: template
      value_template: "{{ trigger.event.data.repository is defined }}"
  action:
    - service: persistent_notification.create
      data_template:
        title: New repository in HACS
        message:
          "{% set repo = trigger.event.data.repository %} {% set id = trigger.event.data.repository_id\
          \ %}\n [{{ repo }}](/hacs/repository/{{ id }})\n was just added to HACS."
- alias: Notification updates pending in HACS
  id: "21"
  trigger:
    - platform: state
      entity_id: sensor.hacs
  condition:
    - condition: template
      value_template: "{{ states(trigger.entity_id) != 'unknown'}}"
    - condition: template
      value_template: "{{ (states(trigger.entity_id) | float) != 0}}"
  action:
    - service: persistent_notification.create
      data_template:
        title: Updates pending in HACS
        message:
          "{% for repo in state_attr(trigger.entity_id, 'repositories') %}\n\
          \  **{{ repo.display_name }}** _{{ repo[\"installed version\"] }}_ -> _{{\
          \ repo[\"available version\"] }}_\n{% endfor %}"
- alias: Notification Low batteries
  id: "22"
  trigger:
    - platform: numeric_state
      entity_id:
        - device_tracker.google_nexus
        - device_tracker.google_pixel
        - device_tracker.macbook_air
      value_template:
        "{{ state.attributes.battery if state.attributes.battery else
        101 }}"
      below: 20
  action:
    - service: notify.telegram
      data_template:
        title: "{{ trigger.entity_id.name }} Battery Low"
        message: Charge {{ trigger.to_state.name|default("unknown") }} batteries
- alias: Notification Low Disk Space
  id: "23"
  description: Notify me of low disk space
  trigger:
    - platform: state
      entity_id: sensor.disk_use_percent
  condition:
    - condition: template
      value_template: "{{ (states(trigger.entity_id) | float) > 70}}"
  action:
    - service: notify.telegram
      data_template:
        title: Main disk is almost full!
        message: "Diskusage: {{states(trigger.entity_id)}}"
- alias: Notification for service errors
  id: "24"
  trigger:
    platform: event
    event_type: system_log_event
  condition:
    condition: template
    value_template: '{{ "service" in trigger.event.data.message }}'
  action:
    service: persistent_notification.create
    data_template:
      title: Something bad happened
      message: "{{ trigger.event.data.message }}"
- alias: Snapshot on Motion Detection
  id: "25"
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor
      to: "on"
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_select.home_mode
        state: Away
      - condition: state
        entity_id: input_select.home_mode
        state: Vacation
  action:
    - service: light.turn_on
      data_template:
        entity_id:
          - light.schalter_whz_light
          - light.mood_lights_cwww
    - delay: 00:01:00
    - service: camera.snapshot
      data_template:
        entity_id: camera.nest_cam
        filename: tmp/motion_{{ now().strftime("%Y%m%d_%H%M") }}.jpg
    - service: telegram_bot.send_photo
      data_template:
        caption: Motion Detected!
        file: 'tmp/motion_{{ now().strftime("%Y%m%d_%H%M") }}.jpg'
    - delay: 00:00:01
    - service: light.turn_off
      data_template:
        entity_id:
          - light.schalter_whz_light
          - light.mood_lights_cwww
- alias: Update Google Assistant
  id: "26"
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: google_assistant.request_sync
      data:
        agent_user_id: !secret api_user_id
- alias: Restart Motion Sensor
  id: "27"
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor
      to: "unavailable"
      for:
        minutes: 10
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_select.home_mode
        state: Away
      - condition: state
        entity_id: input_select.home_mode
        state: Vacation
  action:
    - service: ffmpeg.restart
      data:
        entity_id:
          - binary_sensor.motion_sensor
- alias: AndroidTV Play Latest Nexpo Video
  id: "28"
  trigger:
    platform: state
    entity_id: input_boolean.play_nexpo
    to: "on"
  action:
    - service: media_extractor.play_media
      entity_id:
        - media_player.shield
      data_template:
        media_content_id: "{{state_attr('sensor.nexpo', 'url' | string)}}"
        media_content_type: video/youtube
    - service: homeassistant.turn_off
      entity_id: input_boolean.play_nexpo
- alias: AndroidTV Play Latest ScareTheater Video
  id: "29"
  trigger:
    platform: state
    entity_id: input_boolean.play_scaretheater
    to: "on"
  action:
    - service: media_extractor.play_media
      entity_id:
        - media_player.shield
      data_template:
        media_content_id: "{{state_attr('sensor.scaretheater', 'url' | string)}}"
        media_content_type: video/youtube
    - service: homeassistant.turn_off
      entity_id: input_boolean.play_scaretheater
- alias: AndroidTV Play Latest h3 Podcast Video
  id: "30"
  trigger:
    platform: state
    entity_id: input_boolean.play_h3
    to: "on"
  action:
    - service: media_extractor.play_media
      entity_id:
        - media_player.shield
      data_template:
        media_content_id: "{{state_attr('sensor.h3_podcast', 'url' | string)}}"
        media_content_type: video/youtube
    - service: homeassistant.turn_off
      entity_id: input_boolean.play_h3
- alias: AndroidTV Play Latest reignbot Video
  id: "31"
  trigger:
    platform: state
    entity_id: input_boolean.play_reignbot
    to: "on"
  action:
    - service: media_extractor.play_media
      entity_id:
        - media_player.shield
      data_template:
        media_content_id: "{{state_attr('sensor.reignbot', 'url' | string)}}"
        media_content_type: video/youtube
    - service: homeassistant.turn_off
      entity_id: input_boolean.play_reignbot
- alias: "AndroidTV Play Latest SOG Video"
  id: "32"
  trigger:
    platform: state
    entity_id: input_boolean.play_sog
    to: "on"
  action:
    - service: media_extractor.play_media
      entity_id:
        - media_player.shield
      data_template:
        media_content_id: "{{state_attr('sensor.someordinarygamers', 'url' | string)}}"
        media_content_type: video/youtube
    - service: homeassistant.turn_off
      entity_id: input_boolean.play_sog
- alias: "AndroidTV Play Latest Frenck Video"
  id: "33"
  trigger:
    platform: state
    entity_id: input_boolean.play_frenck
    to: "on"
  action:
    - service: media_extractor.play_media
      entity_id:
        - media_player.shield
      data_template:
        media_content_id: "{{state_attr('sensor.franck_nijhof', 'url' | string)}}"
        media_content_type: video/youtube
    - service: homeassistant.turn_off
      entity_id: input_boolean.play_frenck
#telegram commands
- alias: "Telegram weather forecast"
  id: "34"
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: "/wea"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Weather"
    - service: telegram_bot.send_photo
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        disable_notification: true
        file: "www/_static/icons/{{ states.weather.dark_sky.state }}.png"
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        disable_notification: true
        message: >
          {{states('sensor.dark_sky_summary')}} bei {{states('sensor.dark_sky_temperature')}}Â°C
           Regenwarscheinlichkeit liegt bei {{states('sensor.dark_sky_precip_probability')}} %
- alias: "Telegram send camera picture"
  id: "35"
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: "/status"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Status"
    - service: light.turn_on
      entity_id:
        - light.schalter_whz_light
        - light.mood_lights_cwww
    - delay: 00:01:00
    - service: camera.snapshot
      data_template:
        entity_id: camera.nest_cam
        filename: tmp/motion_{{ now().strftime("%Y%m%d_%H%M") }}.jpg
    - service: light.turn_off
      entity_id:
        - light.schalter_whz_light
        - light.mood_lights_cwww
    - service: telegram_bot.send_photo
      data_template:
        disable_notification: true
        target: "{{ trigger.event.data.user_id }}"
        caption: '{{states("sensor.date_time_iso")}}'
        file: 'tmp/motion_{{ now().strftime("%Y%m%d_%H%M") }}.jpg'
    - service: telegram_bot.send_message
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        disable_notification: true
        message: >
          ðââï¸ {{states('binary_sensor.noise_sensor')}}
           ð {{states('binary_sensor.motion_sensor')}}
           âï¸ {{states('binary_sensor.nodemcu_2_tv_light_sensor')}}
           ðª {{states('binary_sensor.window_wohnzimmer')}}
           ð¥ Wohnzimmer: {{states('binary_sensor.heating_wohnzimmer')}}
           ð¥ Flur: {{states('binary_sensor.heating_flur')}}
           ð¥ Bad: {{states('binary_sensor.heating_bad')}}
           ð¡ {{states('light.all_lights')}}
           ð {{states('sensor.external_ip')}}
           ð {{states('sensor.last_successful_authentication')}}
           ð {{states('sensor.ssl_certificate_expiry_home_inferior_dev')}} Tage
- alias: "Telegram Play SOG on TV"
  id: "36"
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: "/yt_sog"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Status"
    - service: homeassistant.toggle
      entity_id: input_boolean.play_sog
- alias: "Telegram Play h3 on TV"
  id: "37"
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: "/yt_h3"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Status"
    - service: homeassistant.toggle
      entity_id: input_boolean.play_h3
- alias: "Telegram Play nexpo on TV"
  id: "38"
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: "/yt_nexpo"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Status"
    - service: homeassistant.toggle
      entity_id: input_boolean.play_nexpo
- alias: "Telegram Play scaretheater on TV"
  id: "39"
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: "/yt_scaretheater"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Status"
    - service: homeassistant.toggle
      entity_id: input_boolean.play_scaretheater
- alias: "Telegram Play reignbot on TV"
  id: "40"
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: "/yt_reignbot"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Status"
    - service: homeassistant.toggle
      entity_id: input_boolean.play_reignbot
- alias: "Telegram Play frenck on TV"
  id: "41"
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      command: "/yt_frenck"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Status"
    - service: homeassistant.toggle
      entity_id: input_boolean.play_frenck
- alias: "Telegram Ping Pong"
  id: "42"
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/ping"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: >-
          Callback received from {{ trigger.event.data.from_first }}.
          Message id: {{ trigger.event.data.message.message_id }}.
          Data: {{ trigger.event.data.data }}
          {{now().strftime("%H:%M:%S %Y-%m-%d")}} Pong, Message from {{ trigger.event.data["user_id"] }}.
        show_alert: true
- alias: "Telegram startup notification"
  id: "43"
  initial_state: "on"
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: notify.telegram
      data:
        message: "Homeassistant Bot started"
        data:
          keyboard:
            - "/start"
    - service: notify.telegram
      data:
        message: "Control panel"
        data:
          inline_keyboard:
            - "Weather:/wea, Status:/cam"
            - "Ping:/ping"
- alias: "Telegram Start Command"
  id: "44"
  initial_state: "on"
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: "/start"
  action:
    - service: notify.telegram
      data:
        message: >
          {{ [
          "Hi",
          "Hello",
          "Yes Sir!",
          "it's a pleasure to see you again"
          ] | random }}
        data:
          keyboard:
            - "/start, /control_panel"
- alias: "Telegram Control Panel Command"
  id: "45"
  initial_state: "on"
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: "/control_panel"
  action:
    - service: notify.telegram
      data:
        message: >
          {{ [
          "Home Assistant Status",
          "Control Panel",
          "Yes Sir!",
          "Home Assistant Control Panel"
          ] | random }}
        data:
          inline_keyboard:
            - "Weather:/wea, Status:/status"
            - "Ping:/ping"
- alias: "Telegram Conversation"
  id: "46"
  initial_state: "on"
  trigger:
    platform: event
    event_type: telegram_text
  condition:
    condition: template
    value_template: >-
      {% set device = trigger.event.data.text|lower|replace('turn on ','')|replace('turn off ','') %}
      {% for entity in states.group.telegram_devices.attributes.entity_id if states[entity.split('.')[0]][entity.split('.')[1]].name|lower == device -%}
      true
      {%- else -%}
      false
      {%- endfor -%}
  action:
    - service: conversation.process
      data_template:
        text: "{{ trigger.event.data.text|lower }}"
    - service: telegram_bot.send_message
      data_template:
        message: >-
          {% set device = trigger.event.data.text|lower|replace('turn on ','')|replace('turn off ','') %}
          OK, {{ trigger.event.data.text|lower|replace('turn','turning') }}.
        title: ""
        target: "{{ trigger.event.data.user_id }}"
- alias: "Telegram Conversation Device Not Found"
  id: "47"
  initial_state: "on"
  trigger:
    platform: event
    event_type: telegram_text
  condition:
    condition: template
    value_template: >-
      {% set device = trigger.event.data.text|lower|replace('turn on ','')|replace('turn off ','') %}
      {% for entity in states.group.telegram_devices.attributes.entity_id if states[entity.split('.')[0]][entity.split('.')[1]].name|lower == device -%}
      false
      {%- else -%}
      true
      {%- endfor -%}
  action:
    service: telegram_bot.send_message
    data_template:
      message: >-
        {% set device = trigger.event.data.text|lower|replace('turn on ','')|replace('turn off ','') %}
        I'm sorry. I cannot find the device named {{device}} in the house.
      title: ""
      target: "{{ trigger.event.data.user_id }}"
- alias: Turn Lights Flur on
  id: "48"
  trigger:
    platform: state
    entity_id: binary_sensor.wohnzimmertur
    from: "off"
    to: "on"
  action:
    service: switch.turn_on
    entity_id: switch.schalter_flur_whz_relay
- alias: Turn Lights Flur off
  id: "49"
  trigger:
    platform: state
    entity_id: binary_sensor.wohnzimmertur
    from: "on"
    to: "off"
  action:
    service: switch.turn_off
    entity_id: switch.schalter_flur_whz_relay
- alias: Notification TV Badezimmer besetzt
  id: "50"
  trigger:
    platform: state
    entity_id: switch.schalter_bad_relay
    to: "on"
  action:
    - service: notify.android
      data_template:
        title: ð½ Badezimmer ist besetzt
        message: " "
- alias: Notification TV Badezimmer frei
  id: "51"
  trigger:
    platform: state
    entity_id: switch.schalter_bad_relay
    to: "off"
  action:
    - service: notify.android
      data_template:
        title: ð½ Badezimmer ist frei
        message: " "
- alias: Update Google Fit Sensor
  id: "52"
  trigger:
    - platform: time_pattern
      hours: /24
  condition:
    condition: time
    after: "19:00:00"
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.google_fit_martin
- alias: System Travis Build Failed
  id: "53"
  trigger:
    - platform: state
      entity_id: sensor.phixion_home_assistantconfig_last_build_state
      from: "started"
      to: "failed"
  action:
    - service: notify.telegram
      data_template:
        title: ð Travis build failed
        message: >
          https://travis-ci.org/github/phixion/Home-AssistantConfig/builds/{{ states('sensor.phixion_home_assistantconfig_last_build_id') }}
- alias: System Travis Build passed
  id: "54"
  trigger:
    - platform: state
      entity_id: sensor.phixion_home_assistantconfig_last_build_state
      from: "started"
      to: "passed"
  action:
    - service: notify.telegram
      data_template:
        title: âï¸ Travis build passed - restarting HomeAssistant
        message: >
          https://travis-ci.org/github/phixion/Home-AssistantConfig/builds/{{ states('sensor.phixion_home_assistantconfig_last_build_id') }}
    - service: homeassistant.restart
    