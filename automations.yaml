# █████╗ ██╗   ██╗████████╗ ██████╗ ███╗   ███╗ █████╗ ████████╗██╗ ██████╗ ███╗   ██╗███████╗
#██╔══██╗██║   ██║╚══██╔══╝██╔═══██╗████╗ ████║██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║██╔════╝
#███████║██║   ██║   ██║   ██║   ██║██╔████╔██║███████║   ██║   ██║██║   ██║██╔██╗ ██║███████╗
#██╔══██║██║   ██║   ██║   ██║   ██║██║╚██╔╝██║██╔══██║   ██║   ██║██║   ██║██║╚██╗██║╚════██║
#██║  ██║╚██████╔╝   ██║   ╚██████╔╝██║ ╚═╝ ██║██║  ██║   ██║   ██║╚██████╔╝██║ ╚████║███████║
#╚═╝  ╚═╝ ╚═════╝    ╚═╝    ╚═════╝ ╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝
- alias: Vacation Mode
  trigger:
    platform: state
    entity_id: person.martin
    from: home
    to: not_home
    for:
      hours: 12
      minutes: 0
      seconds: 0
  action:
    - service: input_select.select_option
      entity_id: input_select.house_mode
      data:
        option: Vacation Mode
    - service: notify.pushover
      data:
        message: Vacation Mode turned ON
        title: 🌴 Vacation Mode turned ON
  id: a4476090f8f94f369735125d6506079f
- alias: Update
  trigger:
    platform: state
    entity_id: binary_sensor.updater
    to: "on"
  action:
    - service: notify.pushover
      data:
        message: Update available
        title: Update available
  id: 18b95179215b42b78ee8a1f1cbdf7c1b
- alias: Turn off all lights/heating
  trigger:
    platform: state
    entity_id: person.martin
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  action:
    - service: switch.turn_on
      entity_id: switch.wiser_away_mode
    - service: light.turn_off
      entity_id:
        - light.schalter_bad_light
        - light.schalter_flur_whz_light
        - light.schalter_whz_light
        - light.schalter_kueche_light
    - service: light.turn_off
      entity_id:
        - light.all_lights
    - service: media_player.turn_off
      entity_id:
        - media_player.android_tv
        - media_player.shield
    - service: notify.pushover
      data_template:
        message: Temperatur ist {{states('sensor.climate_wohnung_temp')}}
        title: 🚫 Light's and Heating turned OFF
  id: a863cca2442c4de1a9125b19a0dba85f
- alias: Turn on all lights/heating
  trigger:
    platform: state
    entity_id: person.martin
    to: home
  action:
    - service: light.turn_on
      entity_id: light.schalter_flur_whz_light
    - service: switch.turn_off
      entity_id: switch.wiser_away_mode
    - service: climate.turn_on
      data:
        entity_id: climate.alle_thermostate
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.wiser_wohnzimmer
        hvac_mode: auto
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.wiser_bad
        hvac_mode: auto
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.wiser_flur
        hvac_mode: auto
    - service: notify.pushover
      data_template:
        title: 🚶 Martin got home!
        message: Temperatur ist {{states('sensor.climate_wohnung_temp')}}
    - service: notify.pushover
      data_template:
        message: Temperatur ist {{states('sensor.climate_wohnung_temp')}}
        title: ✅ Light's and Heating turned ON
    - service: media_player.volume_set
      data:
        entity_id: media_player.google_home
        volume_level: 0.01
    - service: media_player.turn_on
      entity_id: media_player.google_home
    - delay: 00:00:20
    - service: media_player.volume_set
      data:
        entity_id: media_player.google_home
        volume_level: 0.38
    - delay: 00:00:5
    - service: tts.google_cloud_say
      entity_id: media_player.google_home
      data_template:
        message: Hallo Martin heute ist {{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][now().weekday()] }}. Die Zimmertemperatur betraegt {{states('sensor.climate_wohnung_temp')}} Grad Celsius. Das Wetter ist {{states('sensor.dark_sky_summary')}} bei {{states('sensor.dark_sky_temperature')}} Grad Celsius. Du bist heute bereits {{states('sensor.google_fit_martin_move_time')}} Minuten und {{states('sensor.google_fit_martin_steps')}} Schritte gelaufen, mach weiter so!
  #    - service: tts.watson_tts_say
  #      entity_id: media_player.google_home
  #      data_template:
  #        message: >
  #          <speak>
  #            Hallo Martin heute ist {{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][now().weekday()] }}. Die Zimmertemperatur betraegt {{states('sensor.climate_wohnung_temp')}} Grad Celsius. Das Wetter ist {{states('sensor.dark_sky_summary')}} bei {{states('sensor.dark_sky_temperature')}} Grad Celsius. Du bist heute bereits {{states('sensor.google_fit_martin_move_time')}} Minuten und {{states('sensor.google_fit_martin_steps')}} Schritte gelaufen, mach weiter so!
  #          </speak>
  id: df47ca4915274cf494fc429ae46aa3b1
- alias: Leave Home notification
  trigger:
    platform: state
    entity_id: person.martin
    from: home
    to: not_home
  action:
    service: notify.pushover
    data_template:
      title: 🚶 Martin left the flat
      message:
        "Event triggered: {{ trigger.entity_id }} changed from {{ trigger.from_state.state
        }} to {{ trigger.to_state.state }}"
  id: aebd69cf232b488ca078745e1c1bdf4f
- alias: Badezimmer besetzt
  trigger:
    platform: state
    entity_id: switch.schalter_bad_relay
    to: "on"
  action:
    - service: notify.android
      data_template:
        title: 🚽 Badezimmer ist besetzt
        message: " "
  id: 2778047bc3fa4a6e9047ab0246961bd6
- alias: Badezimmer frei
  trigger:
    platform: state
    entity_id: switch.schalter_bad_relay
    to: "off"
  action:
    - service: notify.android
      data_template:
        title: 🚽 Badezimmer ist frei
        message: " "
  id: 2459b936fc0442459411361ba69453af
- id: update_commute_sensors
  alias: Update commute sensors
  trigger:
    - platform: time_pattern
      minutes: /10
  condition:
    - condition: time
      after: 07:00:00
      before: "11:00:00"
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: "on"
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.morning_commute_trains
    - service: homeassistant.update_entity
      entity_id: sensor.morning_commute_bike
    - service: homeassistant.update_entity
      entity_id: sensor.commute_parents_trains
    - service: homeassistant.update_entity
      entity_id: sensor.commute_parents_bike
- alias: Coinbase Wallet
  trigger:
    - platform: state
      entity_id: sensor.coinbase_eur_wallet
  condition:
    - condition: template
      value_template: "{{trigger.from_state.state != trigger.to_state.state}}"
  action:
    - service: notify.pushover
      data_template:
        title: ₿ Coinbase Wallet Value changed
        message:
          "Event triggered: {{ trigger.entity_id }} changed from {{ trigger.from_state.state
          }} to {{ trigger.to_state.state }}"
- alias: Xur
  trigger:
    - platform: state
      entity_id: sensor.wtfisxur
  condition:
    - condition: template
      value_template: "{{trigger.from_state.state != trigger.to_state.state}}"
  action:
    - service: notify.pushover
      data_template:
        title: Xur changed location
        message: "Find him at: {{states('sensor.wtfisxur')}}"
    - service: notify.telegram
      data_template:
        title: Xur changed location
        message: "Find him at: {{states('sensor.wtfisxur')}}"
- alias: somethig has been added to HACS
  trigger:
    platform: event
    event_type: hacs/repository
    event_data:
      action: registration
  condition:
    condition: template
    value_template: "{{ trigger.event.data.repository is defined }}"
  action:
    service: persistent_notification.create
    data_template:
      title: New repository in HACS
      message: >-
        {% set repo = trigger.event.data.repository %}
        {% set id = trigger.event.data.repository_id %}
        [{{ repo }}](/hacs/repository/{{ id }})
        was just added to HACS.
- alias: updates pending in HACS
  trigger:
    platform: state
    entity_id: sensor.hacs
  condition:
    - condition: template
      value_template: "{{ states(trigger.entity_id) != 'unknown'}}"
    - condition: template
      value_template: "{{ (states(trigger.entity_id) | float) != 0}}"
  action:
    service: persistent_notification.create
    data_template:
      title: Updates pending in HACS
      message: >-
        {% for repo in state_attr(trigger.entity_id, 'repositories') %}
          **{{ repo.display_name }}** _{{ repo["installed version"] }}_ -> _{{ repo["available version"] }}_
        {% endfor %}
#- alias: Keep Google Home Alive
#  trigger:
#    platform: time_pattern
#    minutes: /2
#  condition:
#    condition: or
#    conditions:
#      - condition: state
#        entity_id: media_player.google_home
#        state: "off"
#      - condition: state
#        entity_id: media_player.google_home
#        state: "idle"
#  action:
#    service: media_player.play_media
#    entity_id: media_player.google_home
#    data:
#      media_content_id: http://10.10.10.7:8123/local/_static/1sec.mp3
#      media_content_type: music
- alias: Warn when batteries are below threshold
  trigger:
    - platform: numeric_state
      entity_id:
        - device_tracker.google_nexus
        - device_tracker.google_pixel
      value_template: "{{ state.attributes.battery if state.attributes.battery else 101 }}"
      below: 20
  action:
    - service: notify.pushover
      data_template:
        title: "{{ trigger.entity_id.name }} Battery Low"
        message: 'Charge {{ trigger.to_state.name|default("unknown") }} batteries'
- alias: Low Disk Space
  description: "Notify me of low disk space"
  trigger:
    platform: state
    entity_id: sensor.disk_use_percent
  condition:
    - condition: template
      value_template: "{{ (states(trigger.entity_id) | float) > 70}}"
  action:
    - service: notify.pushover
      data_template:
        title: Main disk is almost full!
        message: "Diskusage: {{states(trigger.entity_id)}}"
- alias: Count warnings
  trigger:
    platform: event
    event_type: system_log_event
    event_data:
      level: WARNING
  action:
    service: counter.increment
    entity_id: counter.warning_counter
- alias: Create notifications for "service" errors
  trigger:
    platform: event
    event_type: system_log_event
  condition:
    condition: template
    value_template: '{{ "service" in trigger.event.data.message }}'
  action:
    service: persistent_notification.create
    data_template:
      title: Something bad happened
      message: '{{ trigger.event.data.message }}'