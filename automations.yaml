#
# turn flat into vacationmode (heating off. random activity mocks)
#
- alias: "Vacation Mode"
  trigger:
    platform: state
    entity_id: person.martin
    to: "not_home"
    for:
      hours: 12
      minutes: 0
      seconds: 0
  action:
    - service: input_select.select_option
      entity_id: input_select.house_mode
      data:
        option: "Vacation Mode"
    - service: notify.pushover
      data:
        message: "Vacation Mode turned ON"
        title: "ðŸŒ´ Vacation Mode turned ON"
- alias: "Update"
  trigger:
    platform: state
    entity_id: binary_sensor.updater
    to: "on"
  action:
    - service: notify.pushover
      data:
        message: "Update available"
        title: "Update available"
#
# H E A T I N G and L I G H T S  O F F/O N while abscent/at home
#
- alias: "Turn off all lights/heating"
  initial_state: on
  trigger:
    platform: state
    entity_id: person.martin
    to: "not_home"
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: 
    - condition: state
      entity_id: image_processing.deepstack_person_detector
      state: "0"
  action:
    - service: light.turn_off
      entity_id: 
#        - light.schalter_bad_light
#        - light.schalter_flur_whz_light
#        - light.schalter_whz_light
#        - light.bulbwhz
#        - light.bulbkueche
#        - light.bulbwhzlamp
#        - light.bulbspotwhztv
#        - light.bulbspotwhzdesk
#        - light.bulbbad
        - group.all_lights
#    - service: switch.turn_on
#      entity_id: switch.wiser_away_mode
    - service: climate.turn_off
      data:
        entity_id: climate.alle_thermostate
    - service: switch.turn_off
      entity_id:
        - switch.schalter_bad_relay
        - switch.schalter_flur_whz_relay
        - switch.schalter_whz_relay
    - service: media_player.turn_off
      entity_id:
        - media_player.android_tv
        - media_player.shield
        - media_player.google_home
    - service: notify.pushover
      data:
        message: "Light's and Heating turned OFF"
        title: "ðŸš« Light's and Heating turned OFF"
- alias: "Turn on all lights/heating"
  initial_state: on
  trigger:
    platform: state
    entity_id: proximity.home
    to: arrived
  condition:
    - condition: time
      after: "16:00:00"
      before: "05:00:00"
    - condition: state
      entity_id: "binary_sensor.workday_sensor"
      state: "on"
    - condition: state
      entity_id: image_processing.deepstack_person_detector
      state: "0"
  action:
    - service: light.turn_on
      entity_id: light.schalter_flur_whz_light
    - service: light.turn_on
      data:
        entity_id: light.mood_lights
#        effect: 'Slow Random'
        flash: short
#    - service: switch.turn_off
#      entity_id: switch.wiser_away_mode
    - service: climate.turn_on
      data:
        entity_id: climate.alle_thermostate
    - service: notify.pushover
      data:
        title: "ðŸš¶ Martin got Home"
        message: "ðŸš¶ Martin got Home"
    - service: notify.pushover
      data:
        message: "Light's and Heating turned ON"
        title: "âœ… Light's and Heating turned ON"
#  action:
#    - service: media_player.volume_set
#      data:
#        entity_id: media_player.android_tv
#       volume_level: 0.7
#   - service: media_player.volume_set
#     data:
#       entity_id: media_player.shield
#       volume_level: 0.7
    - service: media_player.volume_set
      data:
        entity_id: media_player.shield
        volume_level: 0.7
    - service: tts.google_cloud_say
      entity_id: media_player.shield
      data_template:
        message: "Hallo Martin, ich habe dich vermisst. Die Temperatur ist {{states('sensor.climate_wohnung_temp')}} Grad. Ich drehe die Heizung besser etwas auf."
        cache: false
- alias: 'Leave Home notification'
  trigger:
    platform: zone
    event: leave
    zone: zone.home
    entity_id: person.martin
  condition:
    condition: time
    after: '20:00'
  action:
    service: notify.pushover
    data_template:
      title: "ðŸš¶ Martin left the flat"
      message: "Event triggered: {{ trigger.entity_id }} changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"
- alias: "Flur und Kueche aus"
  trigger:
    platform: state
    entity_id: binary_sensor.flur_status
    to: "off"
  action:
    - service: light.turn_off
      entity_id: 
        - light.bulbkueche
- alias: "Flur und Kueche an"
  trigger:
    platform: state
    entity_id: binary_sensor.flur_status
    to: "on"
  action:
    - service: light.turn_on
      entity_id: 
        - light.bulbkueche
- alias: "Badezimmer besetzt"
  trigger:
    platform: state
    entity_id: binary_sensor.bad_status
    to: "on"
  action:
    - service: notify.android
      data_template:
        title: "ðŸš½ Badezimmer ist besetzt"
        message: "Event triggered: {{ trigger.entity_id }} changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"
- alias: "Badezimmer frei"
  trigger:
    platform: state
    entity_id: binary_sensor.bad_status
    to: "off"
  action:
    - service: notify.android
      data_template:
        title: "ðŸš½ Badezimmer ist frei"
        message: "Event triggered: {{ trigger.entity_id }} changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"
- id: update_morning_commute_sensor
  alias: "Commute - Update morning commute sensor"
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: '/2'
  condition:
    - condition: time
      after: '07:00:00'
      before: '11:00:00'
    - condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.morning_commute